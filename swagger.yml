# Swagger 2.0 demo used in the REST API Course
# http://www.acloudfan.com
# Part 2 of the incremental creation of the swagger for
# Vacations API for the fictitious enterprise "ACME Travels"

# Swagger 2.0 always begin with the following
swagger: "2.0"

########### Part 1 ###########

# git checkout  rootdocument
# to check the content in part-1

########### Part 2 ########

# definitions + parameters + securityDefinitions
definitions:
  # A general message schema in case of an error
  GeneralError:
    required:
      - message
    properties:
      message:
        type: string
  # A Not found error that is sent back in case no results are found for the
  # requested resource
  NotFoundError:
    required:
      - message
      - hint
    properties:
      message:
        type: string
      hint:
        type: string

  # Collection of vacations
  Vacations:
    type: array
    items:
      $ref: "#/definitions/Vacation"

  # Vacation schema - NOT ALL FIELDS INCLUDED - for clarity
  # Students may take it as an exercise
  Vacation:
    required:
      - name
      - description
      - type
      - numOfNights
    properties:
      # Name of the package
      name:
        type: string
      # Description of the package
      description:
        type: string

      # Type of the vacation package - shows how to use enumerations
      type:
        type: string
        enum:
          - resort
          - cruise
      # All the destinations included in the vacation package
      # Shows how to use array of complex objects
      destinations:
        type: array
        # There should be at least 1 destination in the package
        minItems: 1
        maxItems: 6
        items:
          $ref: "#/definitions/Location"

      # Number of nights
      numOfNights:
        type: number
        minimum: 1
        maximum: 31
      # Note for students : Please add rest of the fields in schema
    example:
      {
        name: 'Bahamas1000',
        description: 'This is a 4 night package that is most popular',
        type : 'cruise',
        destinations:[
            city: 'Nassau',
            country: 'Bahamas'
        ],
        numOfNights: 4
      }
  # Definition for the location schema
  # Refered from the destinations in Vacation schema
  Location:
    required:
      - city
      - country
    properties:
      city:
        type: string
      country:
        type: string

# Parameter Definitions
# Common parameters used in the operations
parameters:
  IdInPath:
    name: id
    in: path
    type: string
    required: true

# Security Definitions
securityDefinitions:
  KeySecurity:
    type: apiKey
    in: query
    name: api_key

########### Part 3 ########

# git checkout  paths
# to check the content in part-3

########### Final Swagger ###

# git checkout  final
# to check the content for final state of the swagger